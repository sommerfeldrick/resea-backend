# ============================================================
# Server Configuration
# ============================================================
PORT=3001
NODE_ENV=development
FRONTEND_URL=http://localhost:5173

# ============================================================
# SmileAI Integration
# ============================================================
MAIN_DOMAIN_API=https://smileai.com.br
SMILEAI_API_URL=https://smileai.com.br/api
SMILEAI_API_KEY=your_smileai_api_key_here
SMILEAI_CLIENT_ID=your_client_id_here
SMILEAI_CLIENT_SECRET=your_client_secret_here

# ============================================================
# Redis Configuration (OPCIONAL - Cache & Performance)
# ============================================================
# Redis é OPCIONAL. Se não estiver disponível, a aplicação usa cache em memória
# Configure apenas se você tiver Redis rodando localmente ou em um serviço (Upstash, AWS ElastiCache, etc)
REDIS_ENABLED=false
REDIS_URL=redis://localhost:6379

# Para ativar com Upstash (Redis na nuvem - GRÁTIS):
# 1. Acesse https://upstash.com/ e crie uma conta gratuita
# 2. Crie um novo Redis database (Free tier)
# 3. Copie a URL de conexão e configure aqui
# 4. Mude REDIS_ENABLED para true
# Exemplo: REDIS_URL=redis://default:sua_senha@seu_host:porta

# ============================================================
# AI Providers - GRATUITAS (Configure quantas puder para ter fallback)
# ============================================================

# 1. GROQ - GRÁTIS (Recomendado - Mais rápido)
# https://console.groq.com/
GROQ_API_KEY=your_groq_api_key_here

# 2. Together.AI - GRÁTIS ($25 crédito inicial - Llama 3 70B)
# https://api.together.xyz/
TOGETHER_API_KEY=your_together_api_key_here

# 3. Cohere - GRÁTIS (100 req/min - Command R+)
# https://cohere.com/
COHERE_API_KEY=your_cohere_api_key_here

# 4. Google Gemini - GRÁTIS (60 req/min)
# https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# 5. Ollama - GRÁTIS (Local, 100%)
# https://ollama.ai/
OLLAMA_URL=http://localhost:11434

# ============================================================
# AI Providers - PAGAS (Último recurso - só usa se TODAS falharem)
# ============================================================

# OpenAI - PAGO (Mais caro)
# https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# ============================================================
# Academic Search APIs - GRATUITAS (Opcional - aumenta resultados)
# ============================================================

# Semantic Scholar - GRÁTIS (100 req/min - Opcional, aumenta para 5k com key)
# https://www.semanticscholar.org/product/api
SEMANTIC_SCHOLAR_KEY=your_semantic_scholar_key_here

# CORE API - GRÁTIS (10k req/dia - Recomendado)
# https://core.ac.uk/services/api
CORE_API_KEY=your_core_api_key_here

# ============================================================
# Academic Search APIs - PAGAS (Emergência - $0.001/req)
# ============================================================

# CrossRef - PAGO (Só usa se TODAS as 7 fontes gratuitas falharem)
# https://www.crossref.org/documentation/retrieve-metadata/rest-api/
CROSSREF_API_KEY=your_crossref_api_key_here

# ============================================================
# Rate Limiting
# ============================================================
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ============================================================
# File Upload
# ============================================================
MAX_FILE_SIZE=52428800
UPLOAD_DIR=./uploads

# ============================================================
# Research Settings
# ============================================================
ENABLE_WEB_SCRAPING=true
MAX_SCRAPING_SOURCES=10
SCRAPING_TIMEOUT=10000

# ============================================================
# Logging
# ============================================================
LOG_LEVEL=info
LOG_FILE=./logs/app.log
