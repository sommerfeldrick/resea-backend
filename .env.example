# Server Configuration
NODE_ENV=development
PORT=3001
FRONTEND_URL=http://localhost:3000

# OAuth Configuration (smileai.com.br)
MAIN_DOMAIN_API=https://smileai.com.br/api
OAUTH_CLIENT_ID=2
OAUTH_CLIENT_SECRET=2Moof1U6aYC1radoWP4ZozfMxPmy7Kufoyj2c7E8
SSO_SECRET=qualquer_senha_secreta_123

# ============================================================
# AI PROVIDERS - Configure pelo menos 1
# ============================================================

# Qual IA usar? (gemini | openai | claude | groq | ollama)
AI_PROVIDER=gemini

# Google Gemini (Recomendado - Free tier generoso)
# https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_MODEL=gemini-2.0-flash-exp

# OpenAI / ChatGPT (Pago, mas poderoso)
# https://platform.openai.com/api-keys
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4o-mini

# Anthropic Claude (Pago, muito bom)
# https://console.anthropic.com/
CLAUDE_API_KEY=
CLAUDE_MODEL=claude-3-5-haiku-20241022

# Groq (GRÁTIS! Muito rápido) ⭐ RECOMENDADO
# https://console.groq.com/
GROQ_API_KEY=
GROQ_MODEL=llama-3.1-70b-versatile

# Ollama (Local, 100% grátis - requer instalação)
# https://ollama.ai/
OLLAMA_ENABLED=false
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=llama3.2

# ============================================================
# WEB SCRAPING - Economize tokens de IA
# ============================================================
ENABLE_WEB_SCRAPING=true
SCRAPING_TIMEOUT=30000
MAX_ARTICLE_SIZE=50MB

# Redis (opcional - se não configurado usa cache em memória)
REDIS_URL=redis://localhost:6379
REDIS_ENABLED=false

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Academic APIs (opcional - para aumentar limites)
SEMANTIC_SCHOLAR_API_KEY=
ELSEVIER_API_KEY=
SPRINGER_API_KEY=

# Logging
LOG_LEVEL=info
