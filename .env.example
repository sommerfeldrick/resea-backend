# ============================================================
# Server Configuration
# ============================================================
PORT=3001
NODE_ENV=development
FRONTEND_URL=http://localhost:5173

# ============================================================
# Database Configuration (PostgreSQL)
# ============================================================
# Configure com a URL do Render PostgreSQL
# Formato: postgresql://user:password@host:port/dbname
# No Render, copie a URL de conexão do seu banco PostgreSQL
DATABASE_URL=postgresql://user:password@localhost:5432/resea_db

# ============================================================
# SmileAI Integration
# ============================================================
MAIN_DOMAIN_API=https://smileai.com.br
SMILEAI_API_URL=https://smileai.com.br/api
SMILEAI_API_KEY=your_smileai_api_key_here
SMILEAI_CLIENT_ID=your_client_id_here
SMILEAI_CLIENT_SECRET=your_client_secret_here

# ============================================================
# Redis Configuration (OPCIONAL - Cache & Performance)
# ============================================================
# Redis é OPCIONAL. Se não estiver disponível, a aplicação usa cache em memória
# Configure apenas se você tiver Redis rodando localmente ou em um serviço (Upstash, AWS ElastiCache, etc)
REDIS_ENABLED=true
REDIS_URL=redis://localhost:6379

# Para ativar com Upstash (Redis na nuvem - GRÁTIS):
# 1. Acesse https://upstash.com/ e crie uma conta gratuita
# 2. Crie um novo Redis database (Free tier - 10.000 comandos/dia)
# 3. Copie a URL de conexão e configure aqui
# 4. Mude REDIS_ENABLED para true
# Exemplo: REDIS_URL=redis://default:sua_senha@seu_host:porta

# ============================================================
# AI Providers - MULTI-PROVIDER SYSTEM (GRATUITAS + FALLBACK)
# ============================================================
# Sistema rotaciona automaticamente entre 42+ modelos gratuitos
# Prioridade: Ollama (1M tok/dia) → Groq (100k tok/dia) → OpenRouter → Gemini (250 req/dia)
# 
# Documentação: Ver MODELO_MULTIPROVEDOR_COMPLETO.md

# 1️⃣ OLLAMA CLOUD - PRIMARY (1M tokens/day, Cloud-hosted)
# Prioridade: 1 (máxima capacidade)
# https://ollama.ai/settings/keys
# Modelos: gpt-oss:120b-cloud, deepseek-v3.1:671b-cloud, glm-4.6:cloud, etc
OLLAMA_API_KEY=your_ollama_api_key_here
OLLAMA_BASE_URL=https://ollama.com
OLLAMA_MODEL=gpt-oss:120b-cloud

# 2️⃣ GROQ - SECONDARY (100k tokens/day, 30 req/min, ULTRA-FAST)
# Prioridade: 2 (muito rápido)
# https://console.groq.com/keys
# Modelos: llama-3.1-70b-versatile, mixtral-8x7b-32768, llama-3.1-8b-instruct
GROQ_API_KEY=your_groq_api_key_here
GROQ_MODEL=llama-3.1-70b-versatile

# 3️⃣ OPENROUTER - TERTIARY (Flexible credits, 13+ free models)
# Prioridade: 3 (flexível)
# https://openrouter.ai/keys
# Modelos: hermes-3-405b:free, deepseek-chat-v3.1:free, llama-3.3-70b:free, etc
OPENROUTER_API_KEY=your_openrouter_api_key_here
OPENROUTER_MODEL=nousresearch/hermes-3-llama-3.1-405b:free

# 4️⃣ GOOGLE GEMINI - QUATERNARY (250 req/day, 1M tokens/day - ÚLTIMA OPÇÃO)
# Prioridade: 4 (último recurso - limite baixo)
# https://aistudio.google.com/app/apikeys
# Modelos: gemini-2.0-flash
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_MODEL=gemini-2.0-flash

# Quais providers ativar (separados por vírgula)
# Padrão: all (ollama,groq,openrouter,gemini)
ENABLED_PROVIDERS=ollama,groq,openrouter,gemini

# Ordem de fallback quando providers atingem limite
# Padrão: ollama → groq → openrouter → gemini (por capacidade do free tier)
PROVIDER_FALLBACK_ORDER=ollama,groq,openrouter,gemini

# ============================================================
# AI Providers - LEGACY SUPPORT (Ainda suportados, Opcionais)
# ============================================================

# Together.AI - GRÁTIS ($25 crédito inicial - Llama 3 70B)
# https://api.together.xyz/
TOGETHER_API_KEY=your_together_api_key_here

# Cohere - GRÁTIS (100 req/min - Command R+)
# https://cohere.com/
COHERE_API_KEY=your_cohere_api_key_here

# ============================================================
# AI Providers - PAGAS (Último recurso - só usa se TODAS falharem)
# ============================================================

# OpenAI - PAGO (Mais caro)
# https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# ============================================================
# Academic Search APIs - GRATUITAS (Opcional - aumenta resultados)
# ============================================================

# Semantic Scholar - GRÁTIS (100 req/min - Opcional, aumenta para 5k com key)
# https://www.semanticscholar.org/product/api
SEMANTIC_SCHOLAR_KEY=your_semantic_scholar_key_here

# CORE API - GRÁTIS (10k req/dia - Recomendado)
# https://core.ac.uk/services/api
CORE_API_KEY=your_core_api_key_here

# ============================================================
# Academic Search APIs - PAGAS (Emergência - $0.001/req)
# ============================================================

# CrossRef - PAGO (Só usa se TODAS as 7 fontes gratuitas falharem)
# https://www.crossref.org/documentation/retrieve-metadata/rest-api/
CROSSREF_API_KEY=your_crossref_api_key_here

# ============================================================
# Rate Limiting
# ============================================================
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ============================================================
# File Upload
# ============================================================
MAX_FILE_SIZE=52428800
UPLOAD_DIR=./uploads

# ============================================================
# Research Settings
# ============================================================
ENABLE_WEB_SCRAPING=true
MAX_SCRAPING_SOURCES=10
SCRAPING_TIMEOUT=10000

# ============================================================
# Logging
# ============================================================
LOG_LEVEL=info
LOG_FILE=./logs/app.log

# ================================
# Full Text Extraction Settings
# ================================

# GROBID Service URL (for PDF full-text extraction)
GROBID_URL=http://localhost:8070

# Unpaywall API Email (for discovering Open Access PDFs)
UNPAYWALL_EMAIL=your-email@example.com

# Redis URL (for caching extraction results)
REDIS_URL=redis://localhost:6379

# ================================
# Hybrid Search & Vector DB (Phase 1)
# ================================

# Qdrant Vector Database URL
QDRANT_URL=http://localhost:6333

# HuggingFace API Key (for embeddings and reranking)
HUGGINGFACE_API_KEY=your_huggingface_api_key_here

# Embedding Model (multilingual support)
EMBEDDING_MODEL=sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2

# Reranker Model
RERANKER_MODEL=cross-encoder/ms-marco-MiniLM-L-6-v2

# Hybrid Search Weights (Vector + BM25)
VECTOR_WEIGHT=0.7
BM25_WEIGHT=0.3
